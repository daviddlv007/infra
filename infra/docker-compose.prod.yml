services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: mi_db
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always

  backend:
    image: ghcr.io/daviddlv007/infra/backend:latest
    env_file:
      - .env
    environment:
      DJANGO_PROJECT: mi_proyecto
      DJANGO_APP: mi_app
      DJANGO_SETTINGS_MODULE: mi_proyecto.settings.production
      DJANGO_ALLOWED_HOSTS: softwaredlv.duckdns.org
      POSTGRES_DB: mi_db
      POSTGRES_USER: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: "5432"
    depends_on:
      - db
    volumes:
      - static_volume:/vol/static
      - media_volume:/vol/media
    user: "1000:1000" 
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "Host: softwaredlv.duckdns.org", "http://localhost:8000/healthz/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  proxy:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/conf.d_active:/etc/nginx/conf.d:ro
      - static_volume:/var/www/static:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/ssl-params.conf:/etc/nginx/ssl-params.conf:ro
      - ./nginx/letsencrypt:/var/www/letsencrypt:rw
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: always

  certbot:
    image: certbot/certbot
    env_file:
      - .env
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/letsencrypt:/var/www/letsencrypt
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM;
       while :; do
         certbot renew --webroot -w /var/www/letsencrypt --deploy-hook 'nginx -s reload';
         sleep 12h & wait $${!};
       done"
    restart: always

volumes:
  db_data:
    name: db_data
  static_volume:
    name: static_volume
  media_volume:
    name: media_volume
