# HTTP -> HTTPS + ACME
server {
    listen 80;
    server_name softwaredlv.duckdns.org;

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name softwaredlv.duckdns.org;

    ssl_certificate /etc/letsencrypt/live/softwaredlv.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/softwaredlv.duckdns.org/privkey.pem;
    include /etc/nginx/ssl-params.conf;

    # API proxied to backend
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
    }

    location /admin/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
    }

    location /healthz/ {
        proxy_pass http://backend:8000/healthz/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve SPA static files from the docker volume
    location / {
        root /var/www/static;
        try_files $uri $uri/ /index.html;
        index index.html;
        access_log off;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
    }

    # Optional: if backend writes static files under /static/
    location /static/ {
        alias /var/www/static/;
        access_log off;
        expires 1h;
    }

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
}
