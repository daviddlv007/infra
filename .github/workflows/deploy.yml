name: CI/CD - Build, Push to GHCR & Deploy to EC2

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/daviddlv007/infra/backend:latest

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/daviddlv007/infra/frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH and run compose
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail

            PROJ_DIR="/home/${{ secrets.EC2_USER }}/prueba-infra/infra"
            cd "$PROJ_DIR"

            echo ">>> LOGIN a GHCR en EC2"
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo ">>> 1) Pull de im치genes desde GHCR"
            docker-compose -f docker-compose.prod.yml pull

            echo ">>> 2) Levantar/actualizar servicios (force recreate + pull always)"
            docker-compose -f docker-compose.prod.yml up -d --pull always --force-recreate

            echo ">>> 3) Limpieza de im치genes intermedias"
            docker image prune -f || true

            echo ">>> 4) Verificaci칩n b치sica: estado de servicios"
            docker-compose -f docker-compose.prod.yml ps

            echo ">>> Deploy completado."
