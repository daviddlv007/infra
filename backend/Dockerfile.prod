# -------------------------
# Stage: builder (compila wheels)
# -------------------------
FROM python:3.12-slim AS builder

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
WORKDIR /app

# Dependencias necesarias solo para compilar paquetes
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
       build-essential libpq-dev python3-dev curl \
    && rm -rf /var/lib/apt/lists/*

# Copiar requirements y generar wheels reproducibles
COPY requirements.txt /app/requirements.txt
RUN pip install --upgrade pip setuptools wheel \
    && pip wheel --wheel-dir=/wheels -r /app/requirements.txt \
    && ls -l /wheels   # para depuración: verifica que psycopg esté aquí

# -------------------------
# Stage: final (runtime)
# -------------------------
FROM python:3.12-slim

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
WORKDIR /app

# Dependencias de runtime ligeras
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
       libpq5 ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copiar ruedas desde builder e instalar
COPY --from=builder /wheels /wheels
COPY requirements.txt /app/requirements.txt
RUN pip install --upgrade pip \
    && pip install --no-index --find-links=/wheels -r /app/requirements.txt \
    && rm -rf /wheels /root/.cache/pip

# Crear usuario no-root y preparar volúmenes
RUN groupadd -r app && useradd -r -g app app \
    && mkdir -p /vol/static /vol/media /run/gunicorn \
    && chown -R app:app /vol /run/gunicorn

# Copiar código y entrypoint
COPY --chown=app:app . /app
COPY --chown=app:app entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Cambiar a usuario no-root
USER app

# Variables de entorno por defecto
ENV DJANGO_SETTINGS_MODULE=mi_proyecto.settings.production
ENV PYTHONPATH=/app

# Puerto interno para Gunicorn
EXPOSE 8000

# Entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]
